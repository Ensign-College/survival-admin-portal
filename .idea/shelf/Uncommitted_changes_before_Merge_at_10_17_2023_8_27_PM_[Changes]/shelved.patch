Index: package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"survival-admin-portal\",\r\n  \"version\": \"0.1.0\",\r\n  \"private\": true,\r\n  \"scripts\": {\r\n    \"dev\": \"next dev\",\r\n    \"build\": \"next build\",\r\n    \"start\": \"next start\",\r\n    \"lint\": \"next lint\"\r\n  },\r\n  \"dependencies\": {\r\n    \"@netlify/plugin-nextjs\": \"^4.38.1\",\r\n    \"@supabase/auth-helpers-nextjs\": \"^0.7.2\",\r\n    \"@supabase/supabase-js\": \"^2.26.0\",\r\n    \"@types/react-dom\": \"18.2.4\",\r\n    \"autoprefixer\": \"^10.4.14\",\r\n    \"axios\": \"^1.4.0\",\r\n    \"eslint\": \"8.42.0\",\r\n    \"eslint-config-next\": \"13.4.4\",\r\n    \"next\": \"13.4.4\",\r\n    \"postcss\": \"^8.4.24\",\r\n    \"react\": \"18.2.0\",\r\n    \"react-dom\": \"18.2.0\",\r\n    \"react-router-dom\": \"^6.16.0\",\r\n    \"tailwindcss\": \"^3.3.2\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@types/node\": \"^20.3.1\",\r\n    \"@types/react\": \"^18.2.13\",\r\n    \"typescript\": \"^5.1.3\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/package.json b/package.json
--- a/package.json	(revision ad0460683cb343cd4c48c22fddaf5c28abcdfd7f)
+++ b/package.json	(date 1696743921371)
@@ -21,12 +21,17 @@
     "postcss": "^8.4.24",
     "react": "18.2.0",
     "react-dom": "18.2.0",
+    "react-markdown": "^9.0.0",
+    "react-quill": "^2.0.0",
     "react-router-dom": "^6.16.0",
     "tailwindcss": "^3.3.2"
   },
   "devDependencies": {
+    "@testing-library/jest-dom": "^6.1.3",
+    "@testing-library/react": "^14.0.0",
     "@types/node": "^20.3.1",
     "@types/react": "^18.2.13",
+    "jest": "^29.7.0",
     "typescript": "^5.1.3"
   }
 }
Index: components/inputs/InputComponents.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from \"react\";\r\ninterface InputFieldProps {\r\n    label: string;\r\n    name: string;\r\n    value: string;\r\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    type?: string;\r\n}\r\n\r\ninterface TextAreaFieldProps {\r\n    label: string;\r\n    name: string;\r\n    value: string;\r\n    onChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\r\n}\r\n\r\n const InputField: React.FC<InputFieldProps> = ({ label, name, value, onChange, type = \"text\" }) => (\r\n    <div className=\"mb-4\">\r\n        <label className=\"block mb-2 text-sm font-bold text-gray-700\">{label}:</label>\r\n        <input\r\n            type={type}\r\n            name={name}\r\n            value={value}\r\n            onChange={onChange}\r\n            className=\"w-full px-3 py-2 leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\r\n        />\r\n    </div>\r\n);\r\n\r\nconst TextAreaField: React.FC<TextAreaFieldProps> = ({ label, name, value, onChange }) => (\r\n    <div className=\"mb-4\">\r\n        <label className=\"block mb-2 text-sm font-bold text-gray-700\">{label}:</label>\r\n        <textarea\r\n            name={name}\r\n            value={value}\r\n            onChange={onChange}\r\n            className=\"w-full h-32 px-3 py-2 text-gray-700 border rounded shadow appearance-none resize-y focus:outline-none focus:shadow-outline\"\r\n        ></textarea>\r\n    </div>\r\n);\r\n\r\nexport { InputField, TextAreaField };\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/components/inputs/InputComponents.tsx b/components/inputs/InputComponents.tsx
--- a/components/inputs/InputComponents.tsx	(revision ad0460683cb343cd4c48c22fddaf5c28abcdfd7f)
+++ b/components/inputs/InputComponents.tsx	(date 1696626162209)
@@ -16,7 +16,7 @@
 
  const InputField: React.FC<InputFieldProps> = ({ label, name, value, onChange, type = "text" }) => (
     <div className="mb-4">
-        <label className="block mb-2 text-sm font-bold text-gray-700">{label}:</label>
+        <label className="block mb-2 text-sm font-bold text-gray-700">{label}: </label>
         <input
             type={type}
             name={name}
Index: pages/HomePage.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import {createClient} from '@supabase/supabase-js';\r\nimport {useState, useEffect, ChangeEvent, FormEvent} from 'react';\r\nimport EditModal from \"./EditModal\";\r\nimport {SUPABASE_API_KEY, SUPABASE_URL} from \"../services/supabaseClients\";\r\nimport AuthForm from './AuthForm';\r\nimport PictureInput from \"../components/inputs/PictureInput\";\r\n\r\nconst supabase = createClient(SUPABASE_URL as string, SUPABASE_API_KEY as string);\r\ntype Card = {\r\n    id: number;\r\n    title: string;\r\n    image_logo: string;\r\n    card_detail_id: number;\r\n};\r\n\r\n\r\nconst HomePage = () => {\r\n    const [cards, setCards] = useState<Card[]>([]);\r\n    const [form, setForm] = useState({\r\n        title: '',\r\n        image_logo: '',\r\n        card_detail_id: 0,\r\n        card_detail_text: '',         // Initialize the card detail text field\r\n        card_detail_pictures: ''      // Initialize the card detail pictures field\r\n    });\r\n    const [isCardDetailsTextOpen, setIsCardDetailsTextOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetchCards();\r\n    }, []);\r\n\r\n    const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\r\n\r\n    const handleAuthenticated = () => {\r\n      setIsAuthenticated(true);\r\n    };\r\n\r\n    const fetchCards = async () => {\r\n        const {data, error} = await supabase.from('card').select();\r\n        if (error) {\r\n            console.error('Error fetching cards:', error);\r\n        } else {\r\n            console.log(\"cards: \", data);\r\n            // @ts-ignore\r\n            setCards(data || [] );\r\n        }\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setForm({\r\n            title: '',\r\n            image_logo: '',\r\n            card_detail_id: 0,\r\n            card_detail_text: '',\r\n            card_detail_pictures: ''\r\n        });\r\n    };\r\n\r\n    const handleDelete = async (id: number) => {\r\n        const {error} = await supabase.from('card').delete().match({id});\r\n        if (error) {\r\n            console.error('Error deleting card:', error);\r\n        } else {\r\n            // @ts-ignore\r\n            setCards(cards.filter(card => card.id !== id));\r\n        }\r\n    };\r\n\r\n    const handleEdit = (id: number) => {\r\n        // @ts-ignore\r\n        const card = cards.find((card) => card.id === id);\r\n        // @ts-ignore\r\n        setCurrentCard(card);\r\n        setIsEditModalOpen(true);\r\n    };\r\n\r\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n    const [currentCard, setCurrentCard] = useState(null);\r\n\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setForm({...form, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n\r\n        if (form.card_detail_text.trim() === '') {\r\n            alert('Card detail text is required');\r\n            return;\r\n        }\r\n        const newCard = {title: form.title, image_logo: form.image_logo};\r\n\r\n        const { data, error } = await supabase.from('card').insert([newCard]).select();\r\n        const firstCard = data ? data[0] : null;\r\n        const cardError = error;\r\n\r\n        if (cardError || !firstCard) {\r\n            // @ts-ignore\r\n            alert('Error inserting new card:', cardError);\r\n            console.error(cardError)\r\n            return;\r\n        }\r\n\r\n        const newCardDetails = {\r\n            title: form.title,\r\n            pictures: form.card_detail_pictures.split(','),\r\n            card_id: firstCard.id,\r\n            text: form.card_detail_text,\r\n        };\r\n\r\n        await supabase.from('card_details').insert([newCardDetails]);\r\n\r\n        let firstCardDetail = await supabase.from('card_details').select().eq('card_id', firstCard.id).single();\r\n        console.log(\"card detail: \" + firstCardDetail.data.id);\r\n        // Update card_detail_id in the card table\r\n        // @ts-ignore\r\n        let response = await supabase.from('card').update([{card_detail_id: firstCardDetail.data.id}])\r\n            .eq('id', firstCard.id);\r\n        console.log(\"Response: \" + response);\r\n        // @ts-ignore\r\n        const updatedCard = {...firstCard, card_detail_id: firstCardDetail.id};\r\n        // @ts-ignore\r\n        setCards([...cards, updatedCard]);\r\n        resetForm();\r\n    };\r\n\r\n    const handleCardUpdate = (updatedCard: Card) => {\r\n        setCards(prevCards => prevCards.map(card => card.id === updatedCard.id ? updatedCard : card));\r\n    };\r\n\r\n\r\n    // @ts-ignore\r\n    const toggleCardDetailsText = (e) => {\r\n        e.preventDefault()\r\n        setIsCardDetailsTextOpen(!isCardDetailsTextOpen);\r\n    };\r\n    \r\n\r\n    return (\r\n    <div className=\"min-h-screen p-8 bg-white\">\r\n        <h1 className=\"pb-8 text-2xl font-bold\">Welcome to Survival Admin Portal</h1>\r\n        {isAuthenticated ? (\r\n        <div className=\"p-2 md:p-8 pt-0 flex flex-col md:flex-row\">\r\n                \r\n                <div className='w-full pr-8 md:w-1/3 lg:w-full'>\r\n                    <h1 className=\"mb-4 text-4xl\">New Card</h1>\r\n                    <form onSubmit={handleSubmit} className=\"mb-8\">\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block mb-2 text-sm font-bold text-gray-700\">Title:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"title\"\r\n                                value={form.title}\r\n                                onChange={handleChange}\r\n                                className=\"w-full px-3 py-2 leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block mb-2 text-sm font-bold text-gray-700\">Image Logo URL:</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"image_logo\"\r\n                                value={form.image_logo}\r\n                                onChange={handleChange}\r\n                                className=\"w-full px-3 py-2 leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"block mb-2 text-sm font-bold text-gray-700\">Card details id:</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                name=\"card_detail_id\"\r\n                                value={form.card_detail_id}\r\n                                onChange={handleChange}\r\n                                className=\"w-full px-3 py-2 leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <button onClick={(e)=> toggleCardDetailsText(e)} className=\"text-blue-500 hover:underline\">\r\n                                {isCardDetailsTextOpen ? 'Collapse' : 'Add Card Details Text'}\r\n                            </button>\r\n                            {isCardDetailsTextOpen && (\r\n                                <div className=\"mt-2\">\r\n                                    <label className=\"block mb-2 text-sm font-bold text-gray-700\">Card Details Text:</label>\r\n                                    <textarea\r\n                                        name=\"card_detail_text\"\r\n                                        value={form.card_detail_text}\r\n                                        // @ts-ignore\r\n                                        onChange={handleChange}\r\n                                        className=\"w-full h-32 px-3 py-2 text-gray-700 border rounded shadow appearance-none resize-y focus:outline-none focus:shadow-outline\"\r\n                                    ></textarea>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        <PictureInput pictures={form.card_detail_pictures} handleChange={handleChange} />\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"px-4 py-2 font-bold text-white bg-blue-500 rounded hover:bg-blue-700 focus:outline-none focus:shadow-outline\"\r\n                        >\r\n                            Insert New Card\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            \r\n                <div className=\"w-full space-y-4 md:w-2/3 lg:w-full\">\r\n                    <h1 className=\"mb-4 text-4xl\">Current Cards</h1>\r\n                    {cards.map((card, index) => (\r\n                        <div key={index} className=\"flex items-center justify-between p-4 border rounded shadow-lg hover:bg-teal-800 hover:text-white hover:shadow-slate-950 hover:border-transparent\"\r\n                            style={{minWidth: '300px'}}>\r\n                            <div className=\"flex items-center\">\r\n                                {card.image_logo === \"https://example.com/logo.png\" ? (\r\n                                    <div className=\"flex items-center justify-center w-16 h-16 mr-4 bg-gray-200\">\r\n                                        <span className=\"text-gray-400\">No Image</span>\r\n                                    </div>\r\n                                ) : (\r\n                                    <img src={card.image_logo} alt={card.title}\r\n                                        className=\"object-cover w-16 h-16 max-w-full max-h-full mr-4\"/>\r\n                                )}\r\n                                <h2 className=\"flex-shrink-0 text-xl\">{card.title}</h2>\r\n                            </div>\r\n                            <div className=\"flex button-container\">\r\n                                <button onClick={() => handleEdit(card.id)}\r\n                                        className=\"px-2 mr-1 bg-transparent rounded text-slate-400 hover:bg-teal-600 hover:text-white\">\r\n                                    Edit\r\n                                </button>\r\n                                <div className=\"group\">\r\n                                    <button onClick={() => handleDelete(card.id)}\r\n                                        className=\"px-2 py-1 text-white bg-transparent rounded group-hover:bg-red-400 group-hover:text-white\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"\r\n                                            stroke=\"currentColor\" className=\"w-6 h-6 text-red-600 group-hover:fill-red-600 group-hover:text-white\">\r\n                                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2}\r\n                                                d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"/>\r\n                                        </svg>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                {isEditModalOpen && (\r\n                    <EditModal card={currentCard} supabase={supabase} onClose={() => setIsEditModalOpen(false)} onUpdate={handleCardUpdate} onSubmit={handleEdit}/>\r\n                )}\r\n        </div>\r\n        ) : (\r\n        <AuthForm onAuthenticated={handleAuthenticated} />\r\n        )}\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default HomePage;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pages/HomePage.tsx b/pages/HomePage.tsx
--- a/pages/HomePage.tsx	(revision ad0460683cb343cd4c48c22fddaf5c28abcdfd7f)
+++ b/pages/HomePage.tsx	(date 1697489752683)
@@ -1,9 +1,11 @@
 import {createClient} from '@supabase/supabase-js';
-import {useState, useEffect, ChangeEvent, FormEvent} from 'react';
+import React, {useState, useEffect, ChangeEvent, FormEvent, useMemo} from 'react';
 import EditModal from "./EditModal";
 import {SUPABASE_API_KEY, SUPABASE_URL} from "../services/supabaseClients";
 import AuthForm from './AuthForm';
 import PictureInput from "../components/inputs/PictureInput";
+import "react-quill/dist/quill.snow.css";
+import dynamic from "next/dynamic";
 
 const supabase = createClient(SUPABASE_URL as string, SUPABASE_API_KEY as string);
 type Card = {
@@ -25,15 +27,29 @@
     });
     const [isCardDetailsTextOpen, setIsCardDetailsTextOpen] = useState(false);
 
+    const ReactQuill = useMemo(() => dynamic(() => import('react-quill'), { ssr: false }),[]);
     useEffect(() => {
         fetchCards();
     }, []);
+    // useEffect(() => {
+    //     var aScript = document.createElement('script');
+    //     aScript.type = 'text/javascript';
+    //     aScript.src = " https://js.stripe.com/v3/";
+    //
+    //     document.head.appendChild(aScript);
+    //     aScript.onload = () => {
+    //
+    //     };
+    // }, [])
 
     const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);
 
     const handleAuthenticated = () => {
-      setIsAuthenticated(true);
+        setIsAuthenticated(true);
     };
+    const TOOLBAR_OPTIONS = [
+        ["bold", "italic", "underline", "strike", "blockquote", "link"],
+    ];
 
     const fetchCards = async () => {
         const {data, error} = await supabase.from('card').select();
@@ -42,7 +58,7 @@
         } else {
             console.log("cards: ", data);
             // @ts-ignore
-            setCards(data || [] );
+            setCards(data || []);
         }
     };
 
@@ -66,6 +82,14 @@
         }
     };
 
+    // @ts-ignore
+    const handleQuillChange = (value) => {
+        setForm({
+            ...form,
+            title: value  // Update card_detail_text when Quill content changes
+        });
+    };
+
     const handleEdit = (id: number) => {
         // @ts-ignore
         const card = cards.find((card) => card.id === id);
@@ -91,7 +115,7 @@
         }
         const newCard = {title: form.title, image_logo: form.image_logo};
 
-        const { data, error } = await supabase.from('card').insert([newCard]).select();
+        const {data, error} = await supabase.from('card').insert([newCard]).select();
         const firstCard = data ? data[0] : null;
         const cardError = error;
 
@@ -135,117 +159,136 @@
         e.preventDefault()
         setIsCardDetailsTextOpen(!isCardDetailsTextOpen);
     };
-    
+    const [markdownInput, setMarkdownInput] = React.useState("");
+
 
+
     return (
-    <div className="min-h-screen p-8 bg-white">
-        <h1 className="pb-8 text-2xl font-bold">Welcome to Survival Admin Portal</h1>
-        {isAuthenticated ? (
-        <div className="p-2 md:p-8 pt-0 flex flex-col md:flex-row">
-                
-                <div className='w-full pr-8 md:w-1/3 lg:w-full'>
-                    <h1 className="mb-4 text-4xl">New Card</h1>
-                    <form onSubmit={handleSubmit} className="mb-8">
-                        <div className="mb-4">
-                            <label className="block mb-2 text-sm font-bold text-gray-700">Title:</label>
-                            <input
-                                type="text"
-                                name="title"
-                                value={form.title}
-                                onChange={handleChange}
-                                className="w-full px-3 py-2 leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline"
-                            />
-                        </div>
-                        <div className="mb-4">
-                            <label className="block mb-2 text-sm font-bold text-gray-700">Image Logo URL:</label>
-                            <input
-                                type="text"
-                                name="image_logo"
-                                value={form.image_logo}
-                                onChange={handleChange}
-                                className="w-full px-3 py-2 leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline"
-                            />
-                        </div>
-                        <div className="mb-4">
-                            <label className="block mb-2 text-sm font-bold text-gray-700">Card details id:</label>
-                            <input
-                                type="number"
-                                name="card_detail_id"
-                                value={form.card_detail_id}
-                                onChange={handleChange}
-                                className="w-full px-3 py-2 leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline"
-                            />
-                        </div>
-                        <div className="mb-4">
-                            <button onClick={(e)=> toggleCardDetailsText(e)} className="text-blue-500 hover:underline">
-                                {isCardDetailsTextOpen ? 'Collapse' : 'Add Card Details Text'}
-                            </button>
-                            {isCardDetailsTextOpen && (
-                                <div className="mt-2">
-                                    <label className="block mb-2 text-sm font-bold text-gray-700">Card Details Text:</label>
-                                    <textarea
-                                        name="card_detail_text"
-                                        value={form.card_detail_text}
-                                        // @ts-ignore
-                                        onChange={handleChange}
-                                        className="w-full h-32 px-3 py-2 text-gray-700 border rounded shadow appearance-none resize-y focus:outline-none focus:shadow-outline"
-                                    ></textarea>
-                                </div>
-                            )}
-                        </div>
-                        <PictureInput pictures={form.card_detail_pictures} handleChange={handleChange} />
-                        <button
-                            type="submit"
-                            className="px-4 py-2 font-bold text-white bg-blue-500 rounded hover:bg-blue-700 focus:outline-none focus:shadow-outline"
-                        >
-                            Insert New Card
-                        </button>
-                    </form>
-                </div>
-            
-                <div className="w-full space-y-4 md:w-2/3 lg:w-full">
-                    <h1 className="mb-4 text-4xl">Current Cards</h1>
-                    {cards.map((card, index) => (
-                        <div key={index} className="flex items-center justify-between p-4 border rounded shadow-lg hover:bg-teal-800 hover:text-white hover:shadow-slate-950 hover:border-transparent"
-                            style={{minWidth: '300px'}}>
-                            <div className="flex items-center">
-                                {card.image_logo === "https://example.com/logo.png" ? (
-                                    <div className="flex items-center justify-center w-16 h-16 mr-4 bg-gray-200">
-                                        <span className="text-gray-400">No Image</span>
-                                    </div>
-                                ) : (
-                                    <img src={card.image_logo} alt={card.title}
-                                        className="object-cover w-16 h-16 max-w-full max-h-full mr-4"/>
-                                )}
-                                <h2 className="flex-shrink-0 text-xl">{card.title}</h2>
-                            </div>
-                            <div className="flex button-container">
-                                <button onClick={() => handleEdit(card.id)}
-                                        className="px-2 mr-1 bg-transparent rounded text-slate-400 hover:bg-teal-600 hover:text-white">
-                                    Edit
-                                </button>
-                                <div className="group">
-                                    <button onClick={() => handleDelete(card.id)}
-                                        className="px-2 py-1 text-white bg-transparent rounded group-hover:bg-red-400 group-hover:text-white">
-                                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
-                                            stroke="currentColor" className="w-6 h-6 text-red-600 group-hover:fill-red-600 group-hover:text-white">
-                                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2}
-                                                d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
-                                        </svg>
-                                    </button>
-                                </div>
-                            </div>
-                        </div>
-                    ))}
-                </div>
-                {isEditModalOpen && (
-                    <EditModal card={currentCard} supabase={supabase} onClose={() => setIsEditModalOpen(false)} onUpdate={handleCardUpdate} onSubmit={handleEdit}/>
-                )}
-        </div>
-        ) : (
-        <AuthForm onAuthenticated={handleAuthenticated} />
-        )}
-    </div>
+        <div className="min-h-screen p-8 bg-white">
+            <h1 className="pb-8 text-2xl font-bold">Welcome to Survival Admin Portal</h1>
+            {isAuthenticated ? (
+                <div className="p-2 md:p-8 pt-0 flex flex-col md:flex-row">
+
+                    <div className='w-full pr-8 md:w-1/3 lg:w-full'>
+                        <h1 className="mb-4 text-4xl">New Card</h1>
+                        <form onSubmit={handleSubmit} className="mb-8">
+                            <div className="mb-4">
+                                <label className="block mb-2 text-sm font-bold text-gray-700">Title:</label>
+                                <ReactQuill theme="snow"
+                                            value={form.title}
+                                            onChange={handleQuillChange}
+                                            modules={{
+                                                toolbar: {
+                                                    container: TOOLBAR_OPTIONS
+                                                }
+                                            }}
+                                />
+                                {/*<input*/}
+                                {/*    type="text"*/}
+                                {/*    name="title"*/}
+                                {/*    value={form.title}*/}
+                                {/*    onChange={handleChange}*/}
+                                {/*    className="w-full px-3 py-2 leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline"*/}
+                                {/*/>*/}
+                            </div>
+                            <div className="mb-4">
+                                <label className="block mb-2 text-sm font-bold text-gray-700">Image Logo URL:</label>
+                                <input
+                                    type="text"
+                                    name="image_logo"
+                                    value={form.image_logo}
+                                    onChange={handleChange}
+                                    className="w-full px-3 py-2 leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline"
+                                />
+                            </div>
+                            <div className="mb-4">
+                                <label className="block mb-2 text-sm font-bold text-gray-700">Card details id:</label>
+                                <input
+                                    type="number"
+                                    name="card_detail_id"
+                                    value={form.card_detail_id}
+                                    onChange={handleChange}
+                                    className="w-full px-3 py-2 leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline"
+                                />
+                            </div>
+                            <div className="mb-4">
+                                <button onClick={(e) => toggleCardDetailsText(e)}
+                                        className="text-blue-500 hover:underline">
+                                    {isCardDetailsTextOpen ? 'Collapse' : 'Add Card Details Text'}
+                                </button>
+                                {isCardDetailsTextOpen && (
+                                    <div className="mt-2">
+                                        <label className="block mb-2 text-sm font-bold text-gray-700">Card Details
+                                            Text:</label>
+                                        <textarea
+                                            name="card_detail_text"
+                                            value={form.card_detail_text}
+                                            // @ts-ignore
+                                            onChange={handleChange}
+                                            className="w-full h-32 px-3 py-2 text-gray-700 border rounded shadow appearance-none resize-y focus:outline-none focus:shadow-outline"
+                                        ></textarea>
+                                        <textarea>
+
+                                        </textarea>
+                                    </div>
+                                )}
+                            </div>
+                            <PictureInput pictures={form.card_detail_pictures} handleChange={handleChange}/>
+                            <button
+                                type="submit"
+                                className="px-4 py-2 font-bold text-white bg-blue-500 rounded hover:bg-blue-700 focus:outline-none focus:shadow-outline"
+                            >
+                                Insert New Card
+                            </button>
+                        </form>
+                    </div>
+
+                    <div className="w-full space-y-4 md:w-2/3 lg:w-full">
+                        <h1 className="mb-4 text-4xl">Current Cards</h1>
+                        {cards.map((card, index) => (
+                            <div key={index}
+                                 className="flex items-center justify-between p-4 border rounded shadow-lg hover:bg-teal-800 hover:text-white hover:shadow-slate-950 hover:border-transparent"
+                                 style={{minWidth: '300px'}}>
+                                <div className="flex items-center">
+                                    {card.image_logo === "https://example.com/logo.png" ? (
+                                        <div className="flex items-center justify-center w-16 h-16 mr-4 bg-gray-200">
+                                            <span className="text-gray-400">No Image</span>
+                                        </div>
+                                    ) : (
+                                        <img src={card.image_logo} alt={card.title}
+                                             className="object-cover w-16 h-16 max-w-full max-h-full mr-4"/>
+                                    )}
+                                    <h2 className="flex-shrink-0 text-xl">{card.title}</h2>
+                                </div>
+                                <div className="flex button-container">
+                                    <button onClick={() => handleEdit(card.id)}
+                                            className="px-2 mr-1 bg-transparent rounded text-slate-400 hover:bg-teal-600 hover:text-white">
+                                        Edit
+                                    </button>
+                                    <div className="group">
+                                        <button onClick={() => handleDelete(card.id)}
+                                                className="px-2 py-1 text-white bg-transparent rounded group-hover:bg-red-400 group-hover:text-white">
+                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
+                                                 stroke="currentColor"
+                                                 className="w-6 h-6 text-red-600 group-hover:fill-red-600 group-hover:text-white">
+                                                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2}
+                                                      d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
+                                            </svg>
+                                        </button>
+                                    </div>
+                                </div>
+                            </div>
+                        ))}
+                    </div>
+                    {isEditModalOpen && (
+                        <EditModal card={currentCard} supabase={supabase} onClose={() => setIsEditModalOpen(false)}
+                                   onUpdate={handleCardUpdate} onSubmit={handleEdit}/>
+                    )}
+                </div>
+            ) : (
+                <AuthForm onAuthenticated={handleAuthenticated}/>
+            )}
+        </div>
     );
 };
 
